Notes on Redux toolkit and RTK query

Single store, multiple reducers, reducers have actions which we dispatch

Actions are helpful because if the state changed, we KNOW that an action is what caused it. Thus, we can trace the statechange back to an action and debug from there.

To tie states to actions we need reducers, they take in states and actions and return the next state.

We also have one main reducer that wraps the smaller reducers. Not sure what this is about yet.




TUTORIALS
Quick Start - https://redux.js.org/tutorials/quick-start
- Make a store, wrap the entire app with it using a provider
- Make a state slice which will have an initial state value and some reducers. Export the actions and reducer.
- Add the reducer to the store
- We can now use this stuff in a component
- We need useSelector to get the state, and useDispatch to get the dispatch function
- Typescript has some weird caveats https://redux.js.org/tutorials/typescript-quick-start








REDUX ESSENTIALS















REDUX FUNDAMENTALS

